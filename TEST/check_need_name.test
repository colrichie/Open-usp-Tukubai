#!/bin/bash
#!/usr/local/bin/bash -xv # コマンド処理系の変更例
#
# test script of check_need_name
#
# usage: [<test-path>/]check_need_name.test [<command-path> [<python-version>]]
#
#            <test-path>は
#                    「現ディレクトリーからみた」本スクリプトの相対パス
#                    または本スクリプトの完全パス
#                    省略時は現ディレクトリーを仮定する
#            <command-path>は
#                    「本スクリプトのディレクトリーからみた」test対象コマンドの相対パス
#                    またはtest対象コマンドの完全パス
#                    省略時は本スクリプトと同じディレクトリーを仮定する
#                    値があるときまたは空値（""）で省略を示したときはあとにつづく<python-version>を指定できる
#            <python-version>は
#                    使用するpython処理系のversion（minor versionまで指定可）を指定する
#                    （例 python2 python2.6 phthon3 python3.4など）
#                    単にpythonとしたときは現実行環境下でのdefault versionのpythonを使用する
#                    文字列"python"は大文字/小文字の区別をしない
#                    省略時はpythonを仮定する
name=check_need_name # test対象コマンドの名前
testpath=$(dirname $0) # 本スクリプト実行コマンドの先頭部($0)から本スクリプトのディレトリー名をとりだす
cd $testpath # 本スクリプトのあるディレクトリーへ移動
if test "$2" = ""; # <python-version>($2)がなければ
	then pythonversion="python" # default versionのpythonとする
	else pythonversion="$2" # <python-version>($2)があれば指定versionのpythonとする
fi
if test "$1" = ""; # <command-path>($1)がなければ
	then commandpath="." # test対象コマンドは現ディレクトリーにある
	else commandpath="$1" # <command-path>($1)があればtest対象コマンドは指定のディレクトリーにある
fi
com="${pythonversion} ${commandpath}/${name}" # python処理系によるtest対象コマンド実行の先頭部
tmp=/tmp/$$

ERROR_CHECK(){
	[ "$(echo ${PIPESTATUS[@]} | tr -d ' 0')" = "" ] && return
	echo $1
	echo "${pythonversion} ${name}" NG
	rm -f $tmp-*
	exit 1
}

tmp=/tmp/$$


###########################################
#TEST1: ordinaly use

cat << FIN > $tmp-check
HOGE
PAGE
FIN

cat << FIN > $tmp-name
PAGE aaa
HOGE aaho ho
FIN

cat << FIN > $tmp-res
FIN

${com} $tmp-check $tmp-name > $tmp-ans ; ERROR_CHECK "Test1 error"
diff $tmp-res $tmp-ans ; ERROR_CHECK "Test1 error"

###########################################
#TEST2: ordinaly use

cat << FIN > $tmp-check
HOGE
PAGE
山田
FIN

cat << FIN > $tmp-name
HOGE aaho ho

FIN

cat << FIN | sort > $tmp-res
PAGE
山田
FIN

${com} $tmp-check $tmp-name > $tmp-ans 
[ $? -eq 1 ] ; ERROR_CHECK "Test2-1 error"

sort $tmp-ans	|
diff - $tmp-res ; ERROR_CHECK "Test2-2 error"

###########################################
#TEST3: blank option

cat << FIN > $tmp-check
PAGE
FIN

cat << FIN > $tmp-name
PAGE @@
FIN

${com} $tmp-check $tmp-name --blank > $tmp-ans 2>/dev/null
# Error[check_need_name] : --blankオプションはコマンドの直後に指定してください。
[ $? -eq 1 ] ; ERROR_CHECK "Test3-1 error"

${com} --blank @@ $tmp-check $tmp-name > $tmp-ans 
[ $? -eq 1 ] ; ERROR_CHECK "Test3-2-1 error"

diff $tmp-ans $tmp-check ; ERROR_CHECK "Test3-2-1 error"

${com} --blank @ $tmp-check $tmp-name > $tmp-ans 
[ $? -eq 0 ] ; ERROR_CHECK "Test3-3-1 error"

: |
diff - $tmp-ans ; ERROR_CHECK "Test3-3-2 error"

${com} $tmp-check --blank @@ $tmp-name > $tmp-ans 2>/dev/null
# Error[check_need_name] : --blankオプションはコマンドの直後に指定してください。
[ $? -eq 1 ] ; ERROR_CHECK "Test3-4-1 error"

: |
diff - $tmp-ans ; ERROR_CHECK "Test3-4-2 error"


###########################################
#TEST4: no value

cat << FIN > $tmp-check
PAGE
FIN

cat << FIN > $tmp-name
PAGE
FIN

${com} $tmp-check $tmp-name > $tmp-ans
[ $? -eq 1 ] ; ERROR_CHECK "Test4-1-1 error"

diff $tmp-ans $tmp-check ; ERROR_CHECK "Test4-1-2 error"

cat << FIN > $tmp-name
PAGE _
あいうえお aa
FIN

${com} $tmp-check $tmp-name > $tmp-ans
[ $? -eq 1 ] ; ERROR_CHECK "Test4-2-1 error"

diff $tmp-ans $tmp-check ; ERROR_CHECK "Test4-2-2 error"

###########################################
#TEST5: underscore

cat << FIN > $tmp-check
HOGE
PAGE
FIN

cat << FIN > $tmp-name
PAGE aaa
HOGE_001 aaho
FIN

${com} $tmp-check $tmp-name > $tmp-ans ; ERROR_CHECK "Test5-1 error"

: |
diff - $tmp-ans ; ERROR_CHECK "Test5-2 error"

###########################################
#TEST6: invalid underscore

cat << FIN > $tmp-check
HOGE
PAGE
FIN

cat << FIN > $tmp-name
PAGE aaa
HOGE_001_ aaho
FIN

${com} $tmp-check $tmp-name > $tmp-ans 
[ $? -eq 1 ] ; ERROR_CHECK "Test6-1 error"

echo "HOGE"	|
diff - $tmp-ans ; ERROR_CHECK "Test6-2 error"

rm $tmp-*
echo "${pythonversion} ${name}" OK
exit 0
