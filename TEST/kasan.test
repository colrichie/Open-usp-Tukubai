#!/bin/bash
#!/usr/local/bin/bash -xv # コマンド処理系の変更例
#
# test script of kasan
#
# usage: [<test-path>/]kasan.test [<command-path> [<python-version>]]
#
#            <test-path>は
#                    「現ディレクトリーからみた」本スクリプトの相対パス
#                    または本スクリプトの完全パス
#                    省略時は現ディレクトリーを仮定する
#            <command-path>は
#                    「本スクリプトのディレクトリーからみた」test対象コマンドの相対パス
#                    またはtest対象コマンドの完全パス
#                    省略時は本スクリプトと同じディレクトリーを仮定する
#                    値があるときまたは空値（""）で省略を示したときはあとにつづく<python-version>を指定できる
#            <python-version>は
#                    使用するpython処理系のversion（minor versionまで指定可）を指定する
#                    （例 python2 python2.6 phthon3 python3.4など）
#                    単にpythonとしたときは現実行環境下でのdefault versionのpythonを使用する
#                    文字列"python"は大文字/小文字の区別をしない
#                    省略時はpythonを仮定する
name=kasan # test対象コマンドの名前
testpath=$(dirname $0) # 本スクリプト実行コマンドの先頭部($0)から本スクリプトのディレトリー名をとりだす
cd $testpath # 本スクリプトのあるディレクトリーへ移動
if test "$2" = ""; # <python-version>($2)がなければ
	then pythonversion="python" # default versionのpythonとする
	else pythonversion="$2" # <python-version>($2)があれば指定versionのpythonとする
fi
if test "$1" = ""; # <command-path>($1)がなければ
	then commandpath="." # test対象コマンドは現ディレクトリーにある
	else commandpath="$1" # <command-path>($1)があればtest対象コマンドは指定のディレクトリーにある
fi
com="${pythonversion} ${commandpath}/${name}" # python処理系によるtest対象コマンド実行の先頭部
tmp=/tmp/$$

ERROR_CHECK(){
	[ "$(echo ${PIPESTATUS[@]} | tr -d ' 0')" = "" ] && return
	echo $1
	echo "${pythonversion} ${name}" NG
	rm -f $tmp-*
	exit 1
}

###########################################
#TEST1

cat << FIN > $tmp-in
a店 1日目 103 62
a店 2日目 157 94
a店 3日目 62 30
a店 4日目 131 84
a店 5日目 189 111
a店 6日目 350 20
a店 7日目 412 301
FIN

cat << FIN > $tmp-out
a店 1日目 103 62 62
a店 2日目 157 94 156
a店 3日目 62 30 186
a店 4日目 131 84 270
a店 5日目 189 111 381
a店 6日目 350 20 401
a店 7日目 412 301 702
FIN

${com} key=4 $tmp-in > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST1.1 error"

cat $tmp-in | ${com} key=4 > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST1.2 error"

cat $tmp-in | ${com} key=4 - > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST1.3 error"

###########################################
#TEST2

cat << FIN > $tmp-in
a店 1日目 103 62
a店 2日目 157 94
a店 3日目 62 30
a店 4日目 131 84
b店 1日目 210 113
b店 2日目 237 121
b店 3日目 150 82
b店 4日目 198 105
c店 1日目 81 52
c店 2日目 76 49
c店 3日目 38 21
c店 4日目 81 48
FIN

cat << FIN > $tmp-out
a店 1日目 103 62 62
a店 2日目 157 94 156
a店 3日目 62 30 186
a店 4日目 131 84 270
b店 1日目 210 113 113
b店 2日目 237 121 234
b店 3日目 150 82 316
b店 4日目 198 105 421
c店 1日目 81 52 52
c店 2日目 76 49 101
c店 3日目 38 21 122
c店 4日目 81 48 170
FIN

${com} ref=1 key=4 $tmp-in > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST2 error"

###########################################
#TEST3

cat << FIN > $tmp-in
a店 1日目 103 62
a店 2日目 157 94
a店 3日目 62 30
a店 4日目 131 84
a店 5日目 189 111
a店 6日目 350 20
a店 7日目 412 301
FIN

cat << FIN > $tmp-out
a店 1日目 103 62
a店 2日目 157 156
a店 3日目 62 186
a店 4日目 131 270
a店 5日目 189 381
a店 6日目 350 401
a店 7日目 412 702
FIN

${com} +r key=4 $tmp-in > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3.1 error"

${com} +r key=NF $tmp-in > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3.2 error"

###########################################
#TEST4

cat << FIN > $tmp-in
A 1 a
A 1.2 江頭
A 1.23 a
B 2 b
B 2.34 江頭
B 3 b
FIN

cat << FIN > $tmp-out
A 1 1 a
A 1.2 2.2 江頭
A 1.23 3.43 a
B 2 2 b
B 2.34 4.34 江頭
B 3 7.34 b
FIN

${com} ref=1 key=2 $tmp-in > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST4.1 error"

${com} ref=1 key=NF-1 $tmp-in > $tmp-ans
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST4.2 error"

rm -f $tmp-*
echo "${pythonversion} ${name}" OK
exit 0
