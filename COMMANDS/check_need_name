#!/usr/bin/env python
#coding: utf-8
#
# check_need_name フィールド必須チェック（Open usp Tukubai版）
# 
# designed by Nobuaki Tounaka
# written by Yoshio Katayama
# 
# The MIT License
# 
# Copyright (C) 2011 Universal Shell Programming Laboratory
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

_usage = "check_need_name <check_file> <name_file>"
_option = "--blank <string>"
_version = "Wed Oct 26 03:01:58 JST 2011"
_code = "Open usp Tukubai (LINUX/PYTHON2.4/UTF-8)"

import re
import os
import sys

def error(msg, *arg):
	print >> sys.stderr, 'Error[check_need_name] :', msg % arg
	sys.exit(1)

def usage():
	print >> sys.stderr, "Usage    :", _usage
	print >> sys.stderr, "Option   :", _option
	print >> sys.stderr, "Version  :", _version
	sys.exit(1)

#
# 入力ファイルオープン
#
def open_file(n, mode = 'r'):
	if n >= len(sys.argv) or sys.argv[n] == '-':
		file = sys.stdin
	else:
		try:
			file = open(sys.argv[n], mode)
		except:
			error("ファイル '%s' をオープンできません。", sys.argv[n])
	return file

#
# <check_file>
#
def read_check(n):
	tag = []
	for line in open_file(1):
		l = [ x for x in re.split('[ \n]+', line) if x ]
		if len(l) == 1 or len(l) >= 2 and l[1][0] != '_':
			tag += [ [ l[0], False ] ]
	return tag

#
#メイン関数
#
if __name__ == '__main__':

	if len(sys.argv) <= 1 \
	 or sys.argv[1] == '--help' \
	 or sys.argv[1] == '--version':
		usage()

	#
	# オプション解析
	#
	blank = ''
	while len(sys.argv) > 1:
		if sys.argv[1] == '--blank':
			if len(sys.argv) <= 2:
				error("--blank オプションの引数がありません。")
			blank = sys.argv[2]
			del sys.argv[1:3]
		elif re.match(r'--blank=(.+)', sys.argv[1]):
			r = re.match(r'--blank=(.+)', sys.argv[1])
			blank = sys.argv[2]
			del sys.argv[1]
		elif sys.argv[1][0] == '-' and len(sys.argv[1]) > 1:
			error("不明なオプション(%s)です。", sys.argv[1])
		else:
			break
	if not blank:
		blank = '_'

	if len(sys.argv) <= 1:
		usage()

	#
	# <check_file>
	#
	tag = read_check(1)

	#
	# メインループ
	#
	stat = 0
	for line in open_file(2):
		l = [ x for x in re.split('[ \n]+', line) if x ]
		if not l:
			continue
		for x in tag:
			if re.match(x[0] + r'(_[+-]?\d+)?$', l[0][0]):
				x[1] = True
				if len(l) == 1 or l[1] == blank:
					print l[0]
					stat = 1
				break
	for t in tag:
		if not t[1]:
			print t[0]
			stat = 1

	sys.exit(stat)
